#!/usr/bin/env raku

use v6.d;
use App::Librehouse;
use App::Librehouse::Database::Migration;
use App::Librehouse::Database;
use Monad::Result;

{
    use Env::Dotenv :ALL;
    dotenv_load;
}

sub MAIN(*@args) {
    # TODO: Implement migrate up, migrate down, and start.
    die "Don't know what to do with '@args'." if @args.elems > 2;
    given args[0] {
        when 'start' {
            App::Librehouse::start(%*ENV<LIBREHOUSE_PORT> // 8080);
        }
        when 'migrate'{
            my $migration_string;
            if @args[1] eq 'up' {
                $migration-string = @migrations.reduce(-> $acc, $migrate {
                    $acc ~ $migrate.up;        
                });
            
            } elsif @args[1] eq 'down' {
                $migration-string = @migrations.reduce(-> $acc, $migrate {
                    $acc ~ $migrate.down;        
                });

            } else {
                die "Don't know what to do with '@args'.";
            }

            given exec-transaction($migration_string) {
                when Monad::Result::Ok {
                    say "Transaction Completed";
                }
                when Monad::Result::Ok {
                    warn "Transaction Failed";
                }
            }
        }
    }
    

    react whenever signal(SIGINT) { exit 0 }
}
